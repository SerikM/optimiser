{"ast":null,"code":"var _jsxFileName = \"C:\\\\gitrepos\\\\optimizer\\\\app\\\\src\\\\components\\\\Home.jsx\";\nimport * as React from 'react';\nimport '../index.css';\nimport httpClient from '../httpClient';\nimport Spinner from './Spinner';\n\nconst config = require('../config.json');\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      breaks: null,\n      breaksWithCommercials: null,\n      total: 0\n    };\n    this.ensureDataFetched = this.ensureDataFetched.bind(this);\n    this.refetchData = this.refetchData.bind(this);\n    this.setLoading = this.setLoading.bind(this);\n  }\n\n  setLoading(isLoading) {\n    this.setState({\n      isLoading\n    });\n  }\n\n  componentDidMount() {\n    this.ensureDataFetched().then(() => {\n      this.refetchData();\n    });\n  }\n\n  ensureDataFetched() {\n    this.setLoading(true);\n    const client = new httpClient();\n    return client.get(`${config.aws.api.url}${config.aws.api.path}`, {\n      'x-api-key': config.aws.api.key\n    }).then(response => {\n      if (response.data && response.status === 200) {\n        this.setState(state => {\n          return {\n            state: state.breaks = response.data\n          };\n        });\n      }\n\n      this.setLoading(false);\n    }).catch(err => {\n      this.setLoading(false);\n    });\n  }\n\n  refetchData() {\n    this.setLoading(true);\n    const client = new httpClient();\n    return client.post(`${config.aws.api.url}${config.aws.api.path}`, this.state.breaks, {\n      'x-api-key': config.aws.api.key\n    }).then(response => {\n      if (response.data && response.status === 200) {\n        this.setState(state => {\n          return {\n            state: state.breaksWithCommercials = response.data.breaksWithCommercials,\n            total: response.data.total\n          };\n        });\n      }\n\n      this.setLoading(false);\n    }).catch(err => {\n      this.setLoading(false);\n    });\n  }\n\n  updateRating(value, brId, demoName) {\n    if (isNaN(value)) return;\n    const breaks = this.state.breaks;\n    breaks.map(p => p.Id === brId ? p.Ratings.map(d => d.DemoName === demoName ? d.Score = value : d) : p);\n    this.setState(state => {\n      return {\n        state: state.breaks = breaks\n      };\n    });\n    this.refetchData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row row-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"Break Id\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, \"Demographic\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, \"Rating\")), this.state.breaks && this.state.breaks.map((br, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: i + 1,\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, br.Id)), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      key: i + 2,\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, br.Ratings.map((rating, j) => /*#__PURE__*/React.createElement(\"div\", {\n      key: j,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }, rating.DemoName))), /*#__PURE__*/React.createElement(\"div\", {\n      key: i + 3,\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, br.Ratings.map((rating, k) => /*#__PURE__*/React.createElement(\"input\", {\n      key: k + 1,\n      type: \"text\",\n      onChange: e => this.updateRating(parseInt(e.target.value, 10), br.Id, rating.DemoName),\n      defaultValue: rating.Score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    }))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      isLoading: this.state.isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 45\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row row-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }, \"Break Id\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }, \"Commercial Id\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    }, \"Demographic\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, \"Type\")), this.state.breaksWithCommercials && this.state.breaksWithCommercials.map((br, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: i + 'a',\n      className: \"col-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }, br.Id), /*#__PURE__*/React.createElement(\"div\", {\n      key: i + 'b',\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }, br.Commercials && br.Commercials.map((comm, j) => /*#__PURE__*/React.createElement(\"div\", {\n      key: j,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 45\n      }\n    }, comm.Id))), /*#__PURE__*/React.createElement(\"div\", {\n      key: i + 'c',\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      }\n    }, br.Commercials && br.Commercials.map((comm, k) => /*#__PURE__*/React.createElement(\"div\", {\n      key: k,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 45\n      }\n    }, comm.TargetDemoName))), /*#__PURE__*/React.createElement(\"div\", {\n      key: i + 'd',\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }\n    }, br.Commercials && br.Commercials.map((comm, l) => /*#__PURE__*/React.createElement(\"div\", {\n      key: l,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 45\n      }\n    }, comm.CommercialTypeName))))), this.state.total > 0 && /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 54\n      }\n    }, this.state.total))));\n  }\n\n}\n\n;\nexport default Home;","map":{"version":3,"sources":["C:/gitrepos/optimizer/app/src/components/Home.jsx"],"names":["React","httpClient","Spinner","config","require","Home","Component","constructor","props","state","isLoading","breaks","breaksWithCommercials","total","ensureDataFetched","bind","refetchData","setLoading","setState","componentDidMount","then","client","get","aws","api","url","path","key","response","data","status","catch","err","post","updateRating","value","brId","demoName","isNaN","map","p","Id","Ratings","d","DemoName","Score","render","br","i","rating","j","k","e","parseInt","target","Commercials","comm","TargetDemoName","l","CommercialTypeName"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport '../index.css';\r\nimport httpClient from '../httpClient';\r\nimport Spinner from './Spinner';\r\nconst config = require('../config.json');\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            breaks: null,\r\n            breaksWithCommercials: null,\r\n            total: 0\r\n        }\r\n\r\n        this.ensureDataFetched = this.ensureDataFetched.bind(this);\r\n        this.refetchData = this.refetchData.bind(this);\r\n        this.setLoading = this.setLoading.bind(this);\r\n    }\r\n\r\n\r\n    setLoading(isLoading) {\r\n        this.setState({ isLoading });\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.ensureDataFetched()\r\n            .then(() => {\r\n                this.refetchData();\r\n            });\r\n    }\r\n\r\n    ensureDataFetched() {\r\n        this.setLoading(true);\r\n        const client = new httpClient();\r\n        return client.get(`${config.aws.api.url}${config.aws.api.path}`, { 'x-api-key': config.aws.api.key })\r\n            .then(response => {\r\n                if (response.data && response.status === 200) {\r\n                    this.setState((state) => {\r\n                        return { state: state.breaks = response.data };\r\n                    });\r\n                }\r\n                this.setLoading(false);\r\n            })\r\n            .catch((err) => { this.setLoading(false); });\r\n    }\r\n\r\n    refetchData() {\r\n        this.setLoading(true);\r\n        const client = new httpClient();\r\n        return client.post(`${config.aws.api.url}${config.aws.api.path}`, this.state.breaks, { 'x-api-key': config.aws.api.key })\r\n            .then(response => {\r\n                if (response.data && response.status === 200) {\r\n                    this.setState((state) => {\r\n                        return { state: state.breaksWithCommercials = response.data.breaksWithCommercials, total: response.data.total };\r\n                    });\r\n                }\r\n                this.setLoading(false);\r\n            })\r\n            .catch((err) => { this.setLoading(false); });\r\n    }\r\n\r\n    updateRating(value, brId, demoName) {\r\n        if (isNaN(value)) return;\r\n\r\n        const breaks = this.state.breaks;\r\n        breaks.map(p => p.Id === brId ? p.Ratings.map(d => d.DemoName === demoName ? d.Score = value : d) : p);\r\n        this.setState((state) => {\r\n            return { state: state.breaks = breaks };\r\n        });\r\n        this.refetchData();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"main\">\r\n\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-3\">Break Id</div>\r\n                        <div className=\"col-6\">Demographic</div>\r\n                        <div className=\"col-3\">Rating</div>\r\n                    </div>\r\n\r\n                    {this.state.breaks && this.state.breaks.map((br, i) =>\r\n                       \r\n                       <div key={i} className=\"row\">\r\n                          \r\n                          <div class=\"col-3\">\r\n                            <div key={i + 1} className=\"col-3\" >{br.Id}</div>\r\n                          </div>\r\n                          <div class=\"col-9\">\r\n                             \r\n                            <div class=\"row\"></div>\r\n                           \r\n                            <div key={i + 2} className=\"col-6\">\r\n                                {br.Ratings.map((rating, j) =>\r\n                                    <div key={j} >{rating.DemoName}</div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div key={i + 3} className=\"col-3\">\r\n                                {br.Ratings.map((rating, k) =>\r\n                                    <input key={k + 1} type=\"text\" onChange={(e) => this.updateRating(parseInt(e.target.value, 10), br.Id, rating.DemoName)}  defaultValue={rating.Score}/>\r\n                                )}\r\n                            </div>\r\n\r\n\r\n                            \r\n                          </div>\r\n                        </div>\r\n\r\n\r\n                    )}\r\n                </div>\r\n                <div className=\"main\">\r\n                    {this.state.isLoading ? <Spinner isLoading={this.state.isLoading} /> :\r\n                        <React.Fragment>\r\n                            <div className=\"row row-header\">\r\n                                <div className=\"col-2\">Break Id</div>\r\n                                <div className=\"col-3\">Commercial Id</div>\r\n                                <div className=\"col-4\">Demographic</div>\r\n                                <div className=\"col-3\">Type</div>\r\n                            </div>\r\n                            {this.state.breaksWithCommercials && this.state.breaksWithCommercials.map((br, i) =>\r\n                                <div key={i} className=\"row align-items-center\">\r\n                                    <div key={i + 'a'} className=\"col-2 \" >{br.Id}</div>\r\n\r\n\r\n                                    <div key={i + 'b'} className=\"col-3\">\r\n                                        {br.Commercials && br.Commercials.map((comm, j) =>\r\n                                            <div key={j} >{comm.Id}</div>\r\n                                        )}\r\n                                    </div>\r\n\r\n\r\n                                    <div key={i + 'c'} className=\"col-4\">\r\n                                        {br.Commercials && br.Commercials.map((comm, k) =>\r\n                                            <div key={k} >{comm.TargetDemoName}</div>\r\n                                        )}\r\n                                    </div>\r\n\r\n\r\n                                    <div key={i + 'd'} className=\"col-3\">\r\n                                        {br.Commercials && br.Commercials.map((comm, l) =>\r\n                                            <div key={l}>{comm.CommercialTypeName}</div>\r\n                                        )}\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            )}\r\n                            {this.state.total > 0 && <h2>{this.state.total}</h2>}\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}