{"ast":null,"code":"var _jsxFileName = \"C:\\\\gitrepos\\\\optimizer\\\\app\\\\src\\\\components\\\\Home.jsx\";\nimport * as React from 'react';\nimport '../index.css';\nimport httpClient from '../httpClient';\nimport Spinner from './Spinner';\n\nconst config = require('../config.json');\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      breaks: null,\n      breaksWithCommercials: null,\n      total: 0,\n      errors: false\n    };\n    this.ensureDataFetched = this.ensureDataFetched.bind(this);\n    this.refetchData = this.refetchData.bind(this);\n    this.setLoading = this.setLoading.bind(this);\n  }\n\n  setLoading(isLoading) {\n    this.setState({\n      isLoading\n    });\n  }\n\n  componentDidMount() {\n    this.ensureDataFetched().then(() => {\n      this.refetchData();\n    });\n  }\n\n  ensureDataFetched() {\n    this.setLoading(true);\n    const client = new httpClient();\n    return client.get(`${config.aws.api.url}${config.aws.api.path}`, {\n      'x-api-key': config.aws.api.key\n    }).then(response => {\n      if (response.data && response.status === 200) {\n        this.setState(state => {\n          return {\n            state: state.breaks = response.data\n          };\n        });\n      }\n\n      this.setLoading(false);\n    }).catch(err => {\n      this.setLoading(false);\n    });\n  }\n\n  refetchData() {\n    this.setLoading(true);\n    const client = new httpClient();\n    return client.post(`${config.aws.api.url}${config.aws.api.path}`, this.state.breaks, {\n      'x-api-key': config.aws.api.key\n    }).then(response => {\n      if (response.data && response.status === 200) {\n        this.setState(state => {\n          return {\n            state: state.breaksWithCommercials = response.data.breaksWithCommercials,\n            total: response.data.total\n          };\n        });\n      }\n\n      this.setLoading(false);\n    }).catch(err => {\n      this.setLoading(false);\n    });\n  }\n\n  updateRating(target, brId, demoName, elId) {\n    this.setState({\n      current: elId\n    });\n    let value = target.value;\n    const number = parseInt(value, 10);\n\n    if (value.length > 6 || isNaN(number) || !/^\\d+$/.test(value)) {\n      target.style.borderColor = \"red\";\n      this.setState({\n        errors: true\n      });\n      return;\n    } else {\n      this.setState({\n        errors: false\n      });\n      target.style.borderColor = \"\";\n    }\n\n    const breaks = this.state.breaks;\n    breaks.map(p => p.Id === brId ? p.Ratings.map(d => d.DemoName === demoName ? d.Score = number : d) : p);\n    this.setState(state => {\n      return {\n        state: state.breaks = breaks\n      };\n    });\n    this.refetchData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      isLoading: this.state.isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 45\n      }\n    }) : this.state.total > 0 && /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 49\n      }\n    }, this.state.total)), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row row-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, \"Break\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-7 col-md-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, \"Demographic\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5 col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, \"Rating\")))), this.state.breaks && this.state.breaks.map((br, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: i + 1,\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, br.Id))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, br.Ratings && br.Ratings.map((rating, j) => /*#__PURE__*/React.createElement(React.Fragment, {\n      key: j + 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: j + 1,\n      className: \"col-7 col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      key: j + 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 49\n      }\n    }), \"  \", rating.DemoName), /*#__PURE__*/React.createElement(\"div\", {\n      key: j + 3,\n      className: \"col-5 col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      key: `${i}${j}`,\n      type: \"number\",\n      disabled: this.state.errors && this.state.current !== `${i}${j}`,\n      inputMode: \"numeric\",\n      onChange: e => this.updateRating(e.target, br.Id, rating.DemoName, `${i}${j}`),\n      defaultValue: rating.Score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 49\n      }\n    }))))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main lower\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row row-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 37\n      }\n    }, \"Break\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }, \"Commercial\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    }, \"Demographic\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, \"Type\")))), this.state.breaksWithCommercials && this.state.breaksWithCommercials.map((br, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: i + 'a',\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 41\n      }\n    }, br.Id))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    }, br.Commercials && br.Commercials.map((comm, k) => /*#__PURE__*/React.createElement(React.Fragment, {\n      key: k + 'e',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: k + 'b',\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 49\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      isLoading: this.state.isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 77\n      }\n    }) : comm.Id), /*#__PURE__*/React.createElement(\"div\", {\n      key: k + 'c',\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 49\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      isLoading: this.state.isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 77\n      }\n    }) : comm.TargetDemoName), /*#__PURE__*/React.createElement(\"div\", {\n      key: k + 'd',\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 49\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      isLoading: this.state.isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 77\n      }\n    }) : comm.CommercialTypeName))))))))));\n  }\n\n}\n\n;\nexport default Home;","map":{"version":3,"sources":["C:/gitrepos/optimizer/app/src/components/Home.jsx"],"names":["React","httpClient","Spinner","config","require","Home","Component","constructor","props","state","isLoading","breaks","breaksWithCommercials","total","errors","ensureDataFetched","bind","refetchData","setLoading","setState","componentDidMount","then","client","get","aws","api","url","path","key","response","data","status","catch","err","post","updateRating","target","brId","demoName","elId","current","value","number","parseInt","length","isNaN","test","style","borderColor","map","p","Id","Ratings","d","DemoName","Score","render","br","i","rating","j","e","Commercials","comm","k","TargetDemoName","CommercialTypeName"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport '../index.css';\r\nimport httpClient from '../httpClient';\r\nimport Spinner from './Spinner';\r\nconst config = require('../config.json');\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            breaks: null,\r\n            breaksWithCommercials: null,\r\n            total: 0,\r\n            errors: false\r\n        }\r\n\r\n        this.ensureDataFetched = this.ensureDataFetched.bind(this);\r\n        this.refetchData = this.refetchData.bind(this);\r\n        this.setLoading = this.setLoading.bind(this);\r\n    }\r\n\r\n\r\n    setLoading(isLoading) {\r\n        this.setState({ isLoading });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.ensureDataFetched()\r\n            .then(() => {\r\n                this.refetchData();\r\n            });\r\n    }\r\n\r\n    ensureDataFetched() {\r\n        this.setLoading(true);\r\n        const client = new httpClient();\r\n        return client.get(`${config.aws.api.url}${config.aws.api.path}`, { 'x-api-key': config.aws.api.key })\r\n            .then(response => {\r\n                if (response.data && response.status === 200) {\r\n                    this.setState((state) => {\r\n                        return { state: state.breaks = response.data };\r\n                    });\r\n                }\r\n                this.setLoading(false);\r\n            })\r\n            .catch((err) => { this.setLoading(false); });\r\n    }\r\n\r\n    refetchData() {\r\n        this.setLoading(true);\r\n        const client = new httpClient();\r\n        return client.post(`${config.aws.api.url}${config.aws.api.path}`, this.state.breaks, { 'x-api-key': config.aws.api.key })\r\n            .then(response => {\r\n                if (response.data && response.status === 200) {\r\n                    this.setState((state) => {\r\n                        return { state: state.breaksWithCommercials = response.data.breaksWithCommercials, total: response.data.total };\r\n                    });\r\n                }\r\n                this.setLoading(false);\r\n            })\r\n            .catch((err) => { this.setLoading(false); });\r\n    }\r\n\r\n    updateRating(target, brId, demoName, elId) {\r\n        this.setState({ current: elId });\r\n        let value = target.value;\r\n        const number = parseInt(value, 10);\r\n        if (value.length > 6 || isNaN(number) || ! /^\\d+$/.test(value)) {\r\n            target.style.borderColor = \"red\";\r\n            this.setState({ errors: true });\r\n            return;\r\n        }\r\n        else {\r\n            this.setState({ errors: false });\r\n            target.style.borderColor = \"\";\r\n        }\r\n\r\n        const breaks = this.state.breaks;\r\n        breaks.map(p => p.Id === brId ? p.Ratings.map(d => d.DemoName === demoName ? d.Score = number : d) : p);\r\n        this.setState((state) => {\r\n            return { state: state.breaks = breaks };\r\n        });\r\n        this.refetchData();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"total\">\r\n                    {this.state.isLoading ? <Spinner isLoading={this.state.isLoading} /> :\r\n                        this.state.total > 0 && <h2>{this.state.total}</h2>\r\n                    }\r\n                </div>\r\n                <hr></hr>\r\n                <div className=\"main\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-2\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">Break</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-10\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-7 col-md-7\">Demographic</div>\r\n                                <div className=\"col-5 col-md-4\">Rating</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {this.state.breaks && this.state.breaks.map((br, i) =>\r\n                        <div key={i} className=\"row align-items-center\">\r\n                            <div className=\"col-2\">\r\n                                <div className=\"row\">\r\n                                    <div key={i + 1} className=\"col-12\" >{br.Id}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-10\">\r\n                                <div className=\"row\">\r\n                                    {br.Ratings && br.Ratings.map((rating, j) =>\r\n                                        <React.Fragment key={j + 5}>\r\n                                            <div key={j + 1} className=\"col-7 col-md-8\">\r\n                                                <span key={j + 2}></span>  {rating.DemoName}\r\n                                            </div>\r\n\r\n                                            <div key={j + 3} className=\"col-5 col-md-4\">\r\n                                                <input key={`${i}${j}`} type=\"number\" disabled={this.state.errors && this.state.current !== `${i}${j}`} inputMode=\"numeric\" onChange={(e) => this.updateRating(e.target, br.Id, rating.DemoName, `${i}${j}`)} defaultValue={rating.Score} />\r\n                                            </div>\r\n                                        </React.Fragment>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"main lower\">\r\n                    <React.Fragment>\r\n                        <div className=\"row row-header\">\r\n\r\n                            <div className=\"col-2\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">Break</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-10\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-4\">Commercial</div>\r\n                                    <div className=\"col-4\">Demographic</div>\r\n                                    <div className=\"col-4\">Type</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        {this.state.breaksWithCommercials && this.state.breaksWithCommercials.map((br, i) =>\r\n                            <div key={i} className=\"row align-items-center\">\r\n                                <div className=\"col-2\">\r\n                                    <div className=\"row\">\r\n                                        <div key={i + 'a'} className=\"col-12\" >{br.Id}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-10\">\r\n                                    <div className=\"row\">\r\n                                        {br.Commercials && br.Commercials.map((comm, k) =>\r\n                                            <React.Fragment key={k + 'e'}>\r\n                                                <div key={k + 'b'} className=\"col-4\">\r\n                                                    {this.state.isLoading ? <Spinner isLoading={this.state.isLoading} /> :\r\n                                                        comm.Id\r\n                                                    }\r\n                                                </div>\r\n                                                <div key={k + 'c'} className=\"col-4\">\r\n                                                    {this.state.isLoading ? <Spinner isLoading={this.state.isLoading} /> :\r\n                                                        comm.TargetDemoName\r\n                                                    }\r\n                                                </div>\r\n                                                <div key={k + 'd'} className=\"col-4\">\r\n                                                    {this.state.isLoading ? <Spinner isLoading={this.state.isLoading} /> :\r\n                                                        comm.CommercialTypeName\r\n                                                    }\r\n                                                </div>\r\n                                            </React.Fragment>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </React.Fragment>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n};\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}