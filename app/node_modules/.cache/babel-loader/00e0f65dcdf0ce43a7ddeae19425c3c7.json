{"ast":null,"code":"var _jsxFileName = \"C:\\\\gitrepos\\\\optimizer\\\\app\\\\src\\\\components\\\\Home.jsx\";\nimport * as React from 'react';\nimport '../index.css';\nimport httpClient from '../httpClient';\nimport Spinner from './Spinner';\n\nconst config = require('../config.json');\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      breaks: null\n    };\n    this.ensureDataFetched = this.ensureDataFetched.bind(this);\n    this.setLoading = this.setLoading.bind(this);\n  }\n\n  setLoading(isLoading) {\n    this.setState({\n      isLoading\n    });\n  }\n\n  componentDidMount() {\n    this.ensureDataFetched();\n  }\n\n  ensureDataFetched() {\n    this.setLoading(true);\n    const client = new httpClient();\n    return client.get(`${config.aws.api.url}${config.aws.api.path}`, {\n      'x-api-key': config.aws.api.key\n    }).then(response => {\n      if (response.data && response.status === 200) {\n        this.setState(state => {\n          return {\n            state: state.breaks = response.data\n          };\n        });\n      }\n\n      this.setLoading(false);\n    }).catch(err => {\n      this.setLoading(false);\n    });\n  }\n\n  updateRating(v, brId, demoType) {\n    this.setState(prevState => ({\n      breaks: prevState.breaks.map(p => p.Id == brId ? p.Ratings.map(d => d.DemoName == demoName) : p)\n    }));\n    const br = this.state.breaks.find(p => p.Id == brId);\n    if (!br) return;\n    const rating = br.Ratings.find(d => d.DemoName == demoName);\n    if (!rating) return;\n    this.setState(prevState => ({\n      todoItems: prevState.todoItems.map(el => el.key === key ? { ...el,\n        status: 'done'\n      } : el)\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"Break Id\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 61\n      }\n    }, \"Commercial Demographic\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 115\n      }\n    }, \"Rating\")), this.state.breaks && this.state.breaks.map((br, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, br.Id), /*#__PURE__*/React.createElement(\"div\", {\n      key: i + 1,\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, br.Ratings.map((rating, j) => /*#__PURE__*/React.createElement(\"div\", {\n      key: j,\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, rating.DemoName))), /*#__PURE__*/React.createElement(\"div\", {\n      key: i + 2,\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, br.Ratings.map((rating, k) => /*#__PURE__*/React.createElement(\"input\", {\n      key: k + 1,\n      type: \"text\",\n      onChange: e => this.updateRating(e.target.value, br.Id, rating.DemoName),\n      className: \"col-md-12\",\n      defaultValue: rating.Score,\n      placeholder: rating.Score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 34\n      }\n    })))))), this.state.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      isLoading: this.state.isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 23\n      }\n    }) : /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      onClick: this.ensureDataFetched,\n      value: \"get data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }\n    }));\n  }\n\n}\n\n;\nexport default Home;","map":{"version":3,"sources":["C:/gitrepos/optimizer/app/src/components/Home.jsx"],"names":["React","httpClient","Spinner","config","require","Home","Component","constructor","props","state","isLoading","breaks","ensureDataFetched","bind","setLoading","setState","componentDidMount","client","get","aws","api","url","path","key","then","response","data","status","catch","err","updateRating","v","brId","demoType","prevState","map","p","Id","Ratings","d","DemoName","demoName","br","find","rating","todoItems","el","render","i","j","k","e","target","value","Score"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport '../index.css';\r\nimport httpClient from '../httpClient';\r\nimport Spinner from './Spinner';\r\nconst config = require('../config.json');\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            breaks: null\r\n        }\r\n\r\n        this.ensureDataFetched = this.ensureDataFetched.bind(this);\r\n        this.setLoading = this.setLoading.bind(this);\r\n    }\r\n\r\n\r\n    setLoading(isLoading) {\r\n        this.setState({ isLoading });\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.ensureDataFetched();\r\n    }\r\n\r\n    ensureDataFetched() {\r\n        this.setLoading(true);\r\n        const client = new httpClient();\r\n        return client.get(`${config.aws.api.url}${config.aws.api.path}`, { 'x-api-key': config.aws.api.key })\r\n            .then(response => {\r\n                if (response.data && response.status === 200) {\r\n                    this.setState((state) => {\r\n                        return { state: state.breaks = response.data };\r\n                    });\r\n                }\r\n                this.setLoading(false);\r\n            })\r\n            .catch((err) => { this.setLoading(false); });\r\n    }\r\n\r\n    updateRating(v, brId, demoType) \r\n    {\r\n        this.setState(prevState => ({\r\n            breaks:prevState.breaks\r\n            .map(p => p.Id == brId ? p.Ratings\r\n                .map(d => d.DemoName == demoName): p)\r\n        }));\r\n\r\n\r\n\r\n\r\n       const br = this.state.breaks.find( p => p.Id == brId);\r\n         if(!br) return;\r\n        const rating = br.Ratings.find(d => d.DemoName == demoName)\r\n        if(!rating) return;\r\n \r\n\r\n\r\n\r\n\r\n        this.setState(prevState => ({\r\n\r\n            todoItems: prevState.todoItems.map(\r\n              el => el.key === key? { ...el, status: 'done' }: el\r\n            )\r\n          \r\n          }))\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">Break Id</div><div className=\"col-md-6\">Commercial Demographic</div><div className=\"col-md-2\">Rating</div>\r\n                </div>\r\n                {this.state.breaks && this.state.breaks.map((br, i) =>\r\n\r\n                    <div key={i}>\r\n                        <div className=\"row\">\r\n                            <div key={i} className=\"col-md-4\" >{br.Id}</div>\r\n\r\n                            <div key={i+1} className=\"col-md-6\">\r\n                                {br.Ratings.map((rating, j) =>\r\n                                    <div key={j} className=\"col-md-12\">{rating.DemoName}</div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div key={i+2} className=\"col-md-2\">\r\n                                {br.Ratings.map((rating, k)=>\r\n                                 <input key={k+1} type=\"text\" onChange={(e) => this.updateRating(e.target.value, br.Id, rating.DemoName)} className=\"col-md-12\" defaultValue={rating.Score} placeholder={rating.Score} />\r\n                                )}\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                )}\r\n\r\n\r\n\r\n                {this.state.isLoading\r\n                    ? <Spinner isLoading={this.state.isLoading} />\r\n                    : <input type=\"button\" onClick={this.ensureDataFetched} value=\"get data\"></input>}\r\n            </React.Fragment>\r\n        )\r\n    };\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}